@model ShowFeed.ViewModels.CalendarViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "calendar";

    var prev = Model.Date.AddMonths(-1);
    var next = Model.Date.AddMonths(1);

    var month = Model.Date.Month;
    var firstDay = Model.Date.AddDays(-((((int)Model.Date.DayOfWeek) + 6) % 7));
}

<div class="page-header">
    <div class="pull-right">
        <div class="btn-group">
            <a href="@Url.RouteUrl("calendar/day", new { year = Model.Date.Year, month = Model.Date.Month, day = 1 })" class="btn btn-warning">
                Day
            </a>
            <button class="btn btn-warning active">Month</button>
        </div>
        <div class="btn-group">
            <a href="@Url.RouteUrl("calendar/month", new { year = prev.Year, month = prev.Month })" class="btn btn-success"><< Prev</a>
            <a href="@Url.RouteUrl("calendar/month", new { year = DateTime.Today.Year, month = DateTime.Today.Month })" class="btn btn-primary">Today</a>
            <a href="@Url.RouteUrl("calendar/month", new { year = next.Year, month = next.Month })" class="btn btn-success">Next >></a>
        </div>
    </div>
    <h3>@Model.Date.ToString("y", new System.Globalization.CultureInfo("en-US"))</h3>
</div>

<div class="calendar">
    <div class="header">
    @for (int i = 0; i < 7; ++i)
    {
        <div class="day">
            @firstDay.AddDays(i).ToString("dddd", System.Globalization.CultureInfo.InvariantCulture)
        </div>
    }
    </div>

    @for (int i = 0; i < 6; ++i)
    {
        var firstDayOfWeek = firstDay.AddDays(i * 7);
        if (firstDayOfWeek >= next)
        {
            break;
        }
        
        <div class="week">
            @for (int j = 0; j < 7; ++j)
            {
                var currentDay = firstDayOfWeek.AddDays(j);
                var start = currentDay;
                var end = currentDay.AddDays(1);
                var episodes = Model.Episodes
                    .Where(x => start <= x.FirstAired && x.FirstAired < end)
                    .OrderBy(x => x.SeriesName)
                    .ThenBy(x => x.SeasonNumber)
                    .ThenBy(x => x.EpisodeNumber);
                <div class="day">
                    <span class="pull-right">
                        @if (currentDay.Month == month)
                        {
                            <a class="act" href="@Url.RouteUrl("calendar/day", new { year = currentDay.Year, month = currentDay.Month, day = currentDay.Day })">@currentDay.Day</a>
                        }
                        else
                        {
                            <a class="act disabled">@currentDay.Day</a>
                        }  
                    </span>
                    @foreach (var episode in episodes)
                    {
                        <div style="padding-bottom: 8px">
                            <div>
                                <a class="act act-primary" href="@Url.RouteUrl("series/details", new { id = episode.SeriesId })">
                                    @episode.SeriesName
                                </a>
                            </div>
                            <div>
                                @episode.EpisodeDescription
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    }
</div>